{"version":3,"sources":["App/Modal.jsx","App/ResponsiveLayout.jsx","shared/components/FontAwesomeIcons.jsx","App/ContactList/SearchField.jsx","shared/utils/stringFormat.js","App/ContactList/SectionList.jsx","App/ContactList/index.jsx","App/ContactDetails/Details.jsx","App/ContactDetails/assets/light.png","App/ContactDetails/assets/dark.png","App/ContactDetails/Empty.jsx","App/ContactDetails/index.jsx","App/Loader.jsx","App/Error.jsx","App/useRequest.jsx","App/index.jsx","shared/utils/consts.js","index.js"],"names":["Modal","children","isVisible","close","className","onClick","aria-hidden","type","ResponsiveLayout","leftContent","rightContent","modalVisible","closeModal","useState","isSmall","setIsSmall","updateWindowSize","window","innerWidth","useEffect","addEventListener","removeEventListener","FontAwesomeIcons","props","icon","size","fixedWidth","inverse","listItem","rotation","flip","spin","pulse","border","pull","library","add","fas","defaultProps","undefined","SearchField","searchTerm","handleChange","id","onChange","value","placeholder","autoComplete","toCapital","s","arr","split","i","length","charAt","toUpperCase","slice","join","SectionList","data","selectedContactId","setSelectedContactId","renderSections","title","sectionData","map","obj","rowIndex","contact","name","picture","fname","first","lname","last","isActive","role","onKeyPress","src","medium","alt","style","fontWeight","renderRows","section","ContactList","contacts","setSearchTerm","list","setList","regex","replace","temp","filter","match","RegExp","search","e","target","result","reduce","acc","curr","push","Object","values","buildDataSource","dateConfig","year","month","day","Details","dob","location","street","city","state","postcode","phone","email","bday","Date","date","toLocaleDateString","addressLine1","addressLine2","items","content","age","large","Empty","darkMode","width","height","marginBottom","marginTop","backgroundImage","dark","light","backgroundPosition","backgroundSize","ContactDetails","selectedContact","matchMedia","matches","setDarkMode","updateDarkMode","event","Loader","Error","message","fetchPosts","url","a","fetch","response","json","useRequest","proccessingFn","setData","error","setError","loading","setLoading","results","toString","fetchResource","sortData","sort","b","nameA","toLowerCase","nameB","App","find","ReactDOM","render","document","getElementById"],"mappings":"wLAkBeA,MAhBf,YAAgD,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,MAClC,OAAOD,EACH,sBAAKE,UAAU,kBAAf,UACI,qBAAKA,UAAU,kBAAkBC,QAASF,EAAOG,cAAY,SAC7D,sBAAKF,UAAU,UAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,wBAAQG,KAAK,SAASH,UAAU,QAAQC,QAASF,EAAjD,qBAIJ,qBAAKC,UAAU,kBAAf,SAAkCH,UAG1C,MCsBOO,MAlCf,YAAoF,IAAxDC,EAAuD,EAAvDA,YAAaC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WACjE,EAA8BC,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAmB,WACrBD,EAAWE,OAAOC,WAAa,MAUnC,OAPAC,qBAAU,WAIN,OAHAH,IACAC,OAAOG,iBAAiB,SAAUJ,GAE3B,kBAAMC,OAAOI,oBAAoB,SAAUL,MACnD,IAGC,mCACI,sBAAKZ,UAAU,mBAAf,UACI,qBAAKA,UAAU,wCAAf,SACI,qBAAKA,UAAU,QAAf,SAAwBK,MAE1BK,EAKE,cAAC,EAAD,CAAOZ,UAAWS,EAAcR,MAAOS,EAAvC,SACKF,IALL,qBAAKN,UAAU,QAAf,SACI,qBAAKA,UAAU,QAAf,SAAwBM,Y,uBCbhD,SAASY,EAAiBC,GACtB,IACIC,EAYAD,EAZAC,KACAC,EAWAF,EAXAE,KACAC,EAUAH,EAVAG,WACAC,EASAJ,EATAI,QACAC,EAQAL,EARAK,SACAC,EAOAN,EAPAM,SACAC,EAMAP,EANAO,KACAC,EAKAR,EALAQ,KACAC,EAIAT,EAJAS,MACAC,EAGAV,EAHAU,OACAC,EAEAX,EAFAW,KACA9B,EACAmB,EADAnB,UAGJ,OACI,cAAC,IAAD,CACIoB,KAAMA,EACNC,KAAMA,EACNC,WAAYA,EACZC,QAASA,EACTC,SAAUA,EACVC,SAAUA,EACVC,KAAMA,EACNC,KAAMA,EACNC,MAAOA,EACPC,OAAQA,EACRC,KAAMA,EACN9B,UAAWA,IA/BvB+B,IAAQC,IAAIC,KAmDZf,EAAiBgB,aAAe,CAC5Bb,UAAMc,EACNb,YAAY,EACZC,SAAS,EACTC,UAAU,EACVC,cAAUU,EACVT,UAAMS,EACNR,MAAM,EACNC,OAAO,EACPC,QAAQ,EACRC,UAAMK,EACNnC,eAAWmC,GAGAjB,QCpDAkB,MApBf,YAAoD,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aAC/B,OACI,sBAAKtC,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAmBuC,GAAG,eAAtC,SACI,cAAC,EAAD,CAAkBnB,KAAK,SAASE,YAAU,QAGlD,uBACInB,KAAK,OACLH,UAAU,eACVwC,SAAUF,EACVG,MAAOJ,EACPK,YAAY,SACZC,aAAa,YCTdC,EARG,SAACC,GAEf,IADA,IAAMC,EAAMD,EAAEE,MAAM,KACXC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC5BF,EAAIE,GAAKF,EAAIE,GAAGE,OAAO,GAAGC,cAAgBL,EAAIE,GAAGI,MAAM,GAE3D,OAAON,EAAIO,KAAK,MCgDLC,MA/Cf,YAA8E,IAAD,IAAtDC,YAAsD,MAA/C,GAA+C,EAA3CC,EAA2C,EAA3CA,kBAAmBC,EAAwB,EAAxBA,qBA8B3CC,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAaC,EAAhB,EAAUL,KAAV,OACnB,gCACI,qBAAKvD,UAAU,iBAAf,SACI,6BAAK2D,EAAMR,kBAEdS,EAAYC,KAAI,SAACC,EAAKC,GAAN,OAlCN,SAACC,EAASD,GACzB,IAAQE,EAAsBD,EAAtBC,KAAM1B,EAAgByB,EAAhBzB,GAAI2B,EAAYF,EAAZE,QACZC,EAAQvB,EAAUqB,EAAKG,OACvBC,EAAQzB,EAAUqB,EAAKK,MACvBC,EAAWf,IAAsBQ,EAAQzB,GAAGE,MAElD,OACI,sBAEI+B,KAAK,WACLxE,UAAS,mBAAcuE,EAAW,SAAW,IAC7CtE,QAAS,kBAAMwD,EAAqBlB,EAAGE,QACvCgC,WAAY,kBAAMhB,EAAqBlB,EAAGE,QAL9C,UAOI,qBAAKzC,UAAU,SAAf,SACI,qBAAK0E,IAAKR,EAAQS,OAAQC,IAAI,OAElC,qBAAK5E,UAAU,YAAf,SACI,8BACI,+BAAOmE,IADX,IACyB,sBAAMU,MAAO,CAAEC,WAAY,OAA3B,SAAqCT,SAGlE,qBAAKrE,UAAU,uBAAf,SACI,cAAC,EAAD,CAAkBoB,KAAK,oBAftB2C,GA0B2BgB,CAAWjB,EAAKC,QAJ9CJ,IAQd,OACI,sBAAK3D,UAAU,eAAf,UACKuD,EAAKM,KAAI,SAACmB,GAAD,OAAatB,EAAesB,MACrB,IAAhBzB,EAAKN,QAAgB,qBAAKjD,UAAU,aAAf,4BCGnBiF,MA7Cf,YAA6E,IAAtDC,EAAqD,EAArDA,SAAU1B,EAA2C,EAA3CA,kBAAmBC,EAAwB,EAAxBA,qBAChD,EAAoChD,mBAAS,IAA7C,mBAAO4B,EAAP,KAAmB8C,EAAnB,KACA,EAAwB1E,mBAASyE,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KA4BA,OA1BAtE,qBAAU,YACS,WAAO,IAAD,EAEXuE,EAD6BjD,EARjBkD,QAAQ,cAAe,IASTxC,MAAM,IAAIM,KAAK,MACzCmC,EAAON,EAASO,QAAO,SAAC3B,GAAD,MACzB,UAAGA,EAAIG,KAAKG,MAAZ,YAAqBN,EAAIG,KAAKK,MAAOoB,MAAM,IAAIC,OAAOL,EAAO,SAGjED,EAAQG,GACR/B,EAAoB,UAAC+B,EAAK,UAAN,aAAC,EAASjD,GAAGE,OAGrCmD,KACD,CAACvD,EAAY6C,EAAUzB,IActB,qCACI,cAAC,EAAD,CACIpB,WAAYA,EACZC,aAAc,SAACuD,GAAD,OAAOV,EAAcU,EAAEC,OAAOrD,UAEhD,cAAC,EAAD,CACIc,KAlBY,WACpB,IAAMwC,EAASX,EAAKY,QAAO,SAACC,EAAKC,GAC7B,IAAMvC,EAAQuC,EAAKjC,KAAKK,KAAK,GAI7B,OAFK2B,EAAItC,GACJsC,EAAItC,GAAOJ,KAAK4C,KAAKD,GADTD,EAAItC,GAAS,CAAEA,QAAOJ,KAAM,CAAC2C,IAEvCD,IACR,IACH,OAAOG,OAAOC,OAAON,GAUPO,GACN9C,kBAAmBA,EACnBC,qBAAsBA,QCzChC8C,EAAa,CACfC,KAAM,UACNC,MAAO,OACPC,IAAK,WA+EMC,MA5Ef,YAA+B,IAAZ3C,EAAW,EAAXA,QAEXC,EAMAD,EANAC,KACA2C,EAKA5C,EALA4C,IAFJ,EAOI5C,EAJA6C,SAAYC,EAHhB,EAGgBA,OAAQC,EAHxB,EAGwBA,KAAMC,EAH9B,EAG8BA,MAAOC,EAHrC,EAGqCA,SACjCC,EAGAlD,EAHAkD,MACAC,EAEAnD,EAFAmD,MACAjD,EACAF,EADAE,QAEEC,EAAQvB,EAAUqB,EAAKG,OACvBC,EAAQzB,EAAUqB,EAAKK,MACvBX,EAAQf,EAAUqB,EAAKN,OACvByD,EAAO,IAAIC,KAAKT,EAAIU,MAAMC,mBAAmB,QAAShB,GACtDiB,EAAe5E,EAAUkE,GACzBW,EAAY,UAAM7E,EAAUmE,GAAhB,aAA0BnE,EAAUoE,GAApC,YAA8CC,GAI1DS,EAAQ,CACV,CACItG,KAAM,YACNuG,QAAS,4BAAIT,KAEjB,CACI9F,KAAM,WACNuG,QAAS,4BAAIR,KAEjB,CACI/F,KAAM,gBACNuG,QAAS,sCAAOP,EAAP,aAAgBR,EAAIgB,IAApB,kBAEb,CACIxG,KAAM,iBACNuG,QACI,qCACI,4BAAIH,IACJ,4BAAIC,IACJ,4BArBI,uBA2BpB,OACI,qBAAKzH,UAAU,mBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,gDAAf,SACI,qBAAKA,UAAU,YAAY0E,IAAKR,EAAQ2D,MAAOjD,IAAI,OAEvD,sBAAK5E,UAAU,2CAAf,UACI,6BAAK2D,IACL,uCAAQQ,EAAR,YAAiBE,QAErB,qBAAKrE,UAAU,iDAAf,SACI,uCAAQmE,EAAR,YAAiBE,UAGzB,qBAAKrE,UAAU,cACd0H,EAAM7D,KAAI,gBAAGzC,EAAH,EAAGA,KAAMuG,EAAT,EAASA,QAAT,OACP,sBAAgB3H,UAAU,gCAA1B,UACI,qBAAKA,UAAU,+CAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,cAAf,SACI,cAAC,EAAD,CAAkBoB,KAAMA,EAAME,YAAU,UAIpD,qBAAKtB,UAAU,iBAAf,SAAiC2H,MAR3BvG,YCtEf,MAA0B,kCCA1B,MAA0B,iCC6B1B0G,MAzBf,YAA8B,IAAbC,EAAY,EAAZA,SACb,OACI,qBAAK/H,UAAU,mBAAf,SACI,sBAAKA,UAAU,gCAAf,UACI,qBAAKA,UAAU,gCAAf,SACI,qBACI6E,MAAO,CACHmD,MAAO,IACPC,OAAQ,IACRC,aAAc,OACdC,UAAW,UACXC,gBAAgB,OAAD,OAASL,EAAWM,EAAOC,EAA3B,KACfC,mBAAoB,SACpBC,eAAgB,aAI5B,qBAAKxI,UAAU,gCAAf,SACI,oBAAIA,UAAU,oBAAd,yCCMLyI,MAxBf,YAA8C,IAApBC,EAAmB,EAAnBA,gBACtB,EAAgCjI,mBAC5BI,OAAO8H,WAAW,gCAAgCC,SADtD,mBAAOb,EAAP,KAAiBc,EAAjB,KAIMC,EAAiB,SAACC,GACpBF,EAAYE,EAAMH,UAetB,OAZA7H,qBAAU,WAKN,OAJAF,OACK8H,WAAW,gCACX3H,iBAAiB,SAAU8H,GAEzB,WACHjI,OACK8H,WAAW,gCACX1H,oBAAoB,SAAU6H,MAExC,IAEIJ,EAAkB,cAAC,EAAD,CAAS1E,QAAS0E,IAAsB,cAAC,EAAD,CAAOX,SAAUA,KCDvEiB,MAtBf,WACI,OACI,qBAAKhJ,UAAU,YAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,+BCKxBiJ,MAnBf,YAA6B,IAAZC,EAAW,EAAXA,QACb,OACI,qBAAKlJ,UAAU,YAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,SAAf,SACI,qBAAKA,UAAU,gCAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,oBAAIA,UAAU,OAAd,mBACA,4BAAIkJ,kB,uBCT9BC,EAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACQC,MAAMF,GADd,cACTG,EADS,gBAEIA,EAASC,OAFb,cAETA,EAFS,yBAGRA,GAHQ,2CAAH,sDA+BDC,MAzBf,SAAoBL,EAAKM,GACrB,MAAwBjJ,qBAAxB,mBAAO8C,EAAP,KAAaoG,EAAb,KACA,EAA0BlJ,qBAA1B,mBAAOmJ,EAAP,KAAcC,EAAd,KACA,EAA8BpJ,oBAAS,GAAvC,mBAAOqJ,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAhJ,qBAAU,WAAM,4CACZ,8BAAAsI,EAAA,sEAEQU,GAAW,GAFnB,SAG+BZ,EAAWC,GAH1C,OAGcG,EAHd,OAIgBS,EAAYT,EAAZS,QACRL,EAAQD,EAAgBA,EAAcM,GAAWA,GALzD,gDAOQH,EAAS,KAAEI,YAPnB,yBASQF,GAAW,GATnB,6EADY,uBAAC,WAAD,wBAcZG,KACD,CAACd,EAAKM,IAEF,CAACnG,EAAMuG,EAASF,ICpBrBO,EAAW,SAACrH,GAAD,OACbA,EAAIsH,MAAK,SAACf,EAAGgB,GACT,IAAMC,EAAQjB,EAAEpF,KAAKK,KAAKiG,cACpBC,EAAQH,EAAEpG,KAAKK,KAAKiG,cAC1B,OAAOD,EAAQE,GAAS,EAAIF,EAAQE,EAAQ,EAAI,MA8BzCC,MA3Bf,WACI,MAAmChB,EClBvB,wEDkB2CU,GAAvD,mBAAOjF,EAAP,KAAiB4E,EAAjB,KAA0BF,EAA1B,KACA,EAAkDnJ,qBAAlD,mBAAO+C,EAAP,KAA0BC,EAA1B,KAEA,GAAIqG,EAAS,OAAO,cAAC,EAAD,IACpB,GAAIF,EAAO,OAAO,cAAC,EAAD,CAAOV,QAASU,IAElC,IAAMlB,EAAkBxD,EAASwF,MAAK,SAAC1G,GAAD,OAAaA,EAAQzB,GAAGE,QAAUe,KAExE,OACI,qBAAKxD,UAAU,YAAf,SACI,cAAC,EAAD,CACIK,YACI,cAAC,EAAD,CACI6E,SAAUA,EACV1B,kBAAmBA,EACnBC,qBAAsBA,IAG9BnD,aAAc,cAAC,EAAD,CAAgBoI,gBAAiBA,IAC/CnI,aAAciD,EACdhD,WAAY,kBAAMiD,UE/BlCkH,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a07d5feb.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Modal({ children, isVisible, close }) {\n    return isVisible ? (\n        <div className=\"g-modal-wrapper\">\n            <div className=\"g-modal-overlay\" onClick={close} aria-hidden=\"true\" />\n            <div className=\"g-modal\">\n                <div className=\"g-modal-titlebar\">\n                    <button type=\"button\" className=\"g-btn\" onClick={close}>\n                        Close\n                    </button>\n                </div>\n                <div className=\"g-modal-content\">{children}</div>\n            </div>\n        </div>\n    ) : null;\n}\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport Modal from './Modal';\n\nfunction ResponsiveLayout({ leftContent, rightContent, modalVisible, closeModal }) {\n    const [isSmall, setIsSmall] = useState();\n\n    const updateWindowSize = () => {\n        setIsSmall(window.innerWidth < 992);\n    };\n\n    useEffect(() => {\n        updateWindowSize();\n        window.addEventListener('resize', updateWindowSize);\n\n        return () => window.removeEventListener('resize', updateWindowSize);\n    }, []);\n\n    return (\n        <>\n            <div className=\"row bounding-box\">\n                <div className=\"col-12 col-lg-4 full-screen-on-mobile\">\n                    <div className=\"panel\">{leftContent}</div>\n                </div>\n                {!isSmall ? (\n                    <div className=\"col-8\">\n                        <div className=\"panel\">{rightContent}</div>\n                    </div>\n                ) : (\n                    <Modal isVisible={modalVisible} close={closeModal}>\n                        {rightContent}\n                    </Modal>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default ResponsiveLayout;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * The below line adds the solid svg icon set to the core\n * FontAwesome library for use with the <FontAwesomeIcon /> component\n */\nlibrary.add(fas);\n\nfunction FontAwesomeIcons(props) {\n    const {\n        icon,\n        size,\n        fixedWidth,\n        inverse,\n        listItem,\n        rotation,\n        flip,\n        spin,\n        pulse,\n        border,\n        pull,\n        className,\n    } = props;\n\n    return (\n        <FontAwesomeIcon\n            icon={icon}\n            size={size}\n            fixedWidth={fixedWidth}\n            inverse={inverse}\n            listItem={listItem}\n            rotation={rotation}\n            flip={flip}\n            spin={spin}\n            pulse={pulse}\n            border={border}\n            pull={pull}\n            className={className}\n        />\n    );\n}\n\nFontAwesomeIcons.propTypes = {\n    icon: PropTypes.string.isRequired,\n    size: PropTypes.string,\n    fixedWidth: PropTypes.bool,\n    inverse: PropTypes.bool,\n    listItem: PropTypes.bool,\n    rotation: PropTypes.number,\n    flip: PropTypes.string,\n    spin: PropTypes.bool,\n    pulse: PropTypes.bool,\n    border: PropTypes.bool,\n    pull: PropTypes.string,\n    className: PropTypes.string,\n};\n\nFontAwesomeIcons.defaultProps = {\n    size: undefined,\n    fixedWidth: false,\n    inverse: false,\n    listItem: false,\n    rotation: undefined,\n    flip: undefined,\n    spin: false,\n    pulse: false,\n    border: false,\n    pull: undefined,\n    className: undefined,\n};\n\nexport default FontAwesomeIcons;\n","import React from 'react';\nimport FontAwesomeIcons from 'shared/components/FontAwesomeIcons';\n\nfunction SearchField({ searchTerm, handleChange }) {\n    return (\n        <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">\n                    <FontAwesomeIcons icon=\"search\" fixedWidth />\n                </span>\n            </div>\n            <input\n                type=\"text\"\n                className=\"form-control\"\n                onChange={handleChange}\n                value={searchTerm}\n                placeholder=\"Search\"\n                autoComplete=\"off\"\n            />\n        </div>\n    );\n}\n\nexport default SearchField;\n","const toCapital = (s) => {\n    const arr = s.split(' ');\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return arr.join(' ');\n};\n\nexport default toCapital;\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nimport React from 'react';\nimport FontAwesomeIcons from 'shared/components/FontAwesomeIcons';\nimport toCapital from 'shared/utils/stringFormat';\n\nfunction SectionList({ data = [], selectedContactId, setSelectedContactId }) {\n    const renderRows = (contact, rowIndex) => {\n        const { name, id, picture } = contact;\n        const fname = toCapital(name.first);\n        const lname = toCapital(name.last);\n        const isActive = selectedContactId === contact.id.value;\n\n        return (\n            <div\n                key={rowIndex}\n                role=\"menuitem\"\n                className={`list-row ${isActive ? 'active' : ''}`}\n                onClick={() => setSelectedContactId(id.value)}\n                onKeyPress={() => setSelectedContactId(id.value)}\n            >\n                <div className=\"avatar\">\n                    <img src={picture.medium} alt=\"\" />\n                </div>\n                <div className=\"list-data\">\n                    <p>\n                        <span>{fname}</span> <span style={{ fontWeight: '600' }}>{lname}</span>\n                    </p>\n                </div>\n                <div className=\"list-extra d-lg-none\">\n                    <FontAwesomeIcons icon=\"angle-right\" />\n                </div>\n            </div>\n        );\n    };\n\n    const renderSections = ({ title, data: sectionData }) => (\n        <div key={title}>\n            <div className=\"section-header\">\n                <h6>{title.toUpperCase()}</h6>\n            </div>\n            {sectionData.map((obj, rowIndex) => renderRows(obj, rowIndex))}\n        </div>\n    );\n\n    return (\n        <div className=\"section-list\">\n            {data.map((section) => renderSections(section))}\n            {data.length === 0 && <div className=\"no-results\">No results</div>}\n        </div>\n    );\n}\n\nexport default SectionList;\n","import React, { useState, useEffect } from 'react';\nimport SearchField from './SearchField';\nimport SectionList from './SectionList';\n\nconst sanitize = (str) => str.replace(/[^a-zA-Z ]/g, '');\n\nfunction ContactList({ contacts, selectedContactId, setSelectedContactId }) {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [list, setList] = useState(contacts);\n\n    useEffect(() => {\n        const search = () => {\n            const cleanedSearchTerm = sanitize(searchTerm);\n            const regex = cleanedSearchTerm.split('').join('.*');\n            const temp = contacts.filter((obj) =>\n                `${obj.name.first} ${obj.name.last}`.match(new RegExp(regex, 'i'))\n            );\n\n            setList(temp);\n            setSelectedContactId(temp[0]?.id.value);\n        };\n\n        search();\n    }, [searchTerm, contacts, setSelectedContactId]);\n\n    const buildDataSource = () => {\n        const result = list.reduce((acc, curr) => {\n            const title = curr.name.last[0];\n            // eslint-disable-next-line no-param-reassign\n            if (!acc[title]) acc[title] = { title, data: [curr] };\n            else acc[title].data.push(curr);\n            return acc;\n        }, {});\n        return Object.values(result);\n    };\n\n    return (\n        <>\n            <SearchField\n                searchTerm={searchTerm}\n                handleChange={(e) => setSearchTerm(e.target.value)}\n            />\n            <SectionList\n                data={buildDataSource()}\n                selectedContactId={selectedContactId}\n                setSelectedContactId={setSelectedContactId}\n            />\n        </>\n    );\n}\n\nexport default ContactList;\n","import React from 'react';\nimport FontAwesomeIcons from 'shared/components/FontAwesomeIcons';\nimport toCapital from 'shared/utils/stringFormat';\n\nconst dateConfig = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n};\n\nfunction Details({ contact }) {\n    const {\n        name,\n        dob,\n        location: { street, city, state, postcode },\n        phone,\n        email,\n        picture,\n    } = contact;\n    const fname = toCapital(name.first);\n    const lname = toCapital(name.last);\n    const title = toCapital(name.title);\n    const bday = new Date(dob.date).toLocaleDateString('en-US', dateConfig);\n    const addressLine1 = toCapital(street);\n    const addressLine2 = `${toCapital(city)}, ${toCapital(state)} ${postcode}`;\n\n    const nationality = 'United States';\n\n    const items = [\n        {\n            icon: 'phone-alt',\n            content: <p>{phone}</p>,\n        },\n        {\n            icon: 'envelope',\n            content: <p>{email}</p>,\n        },\n        {\n            icon: 'birthday-cake',\n            content: <p>{`${bday} (${dob.age} years old)`}</p>,\n        },\n        {\n            icon: 'map-marker-alt',\n            content: (\n                <>\n                    <p>{addressLine1}</p>\n                    <p>{addressLine2}</p>\n                    <p>{nationality}</p>\n                </>\n            ),\n        },\n    ];\n\n    return (\n        <div className=\"detail-container\">\n            <div className=\"detail-box\">\n                <div className=\"row\">\n                    <div className=\"col-sm-4 d-flex justify-content-center spacer\">\n                        <img className=\"avatar-lg\" src={picture.large} alt=\"\" />\n                    </div>\n                    <div className=\"col-sm-8 d-none d-sm-flex name-container\">\n                        <h5>{title}</h5>\n                        <h2>{`${fname} ${lname}`}</h2>\n                    </div>\n                    <div className=\"col-12 d-flex d-sm-none justify-content-center\">\n                        <h2>{`${fname} ${lname}`}</h2>\n                    </div>\n                </div>\n                <div className=\"separator\" />\n                {items.map(({ icon, content }) => (\n                    <div key={icon} className=\"row align-items-center spacer\">\n                        <div className=\"col-3 col-sm-4 d-flex justify-content-center\">\n                            <div className=\"icon-container\">\n                                <div className=\"icon-border\">\n                                    <FontAwesomeIcons icon={icon} fixedWidth />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-9 col-sm-8\">{content}</div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Details;\n","export default __webpack_public_path__ + \"static/media/light.afda4434.png\";","export default __webpack_public_path__ + \"static/media/dark.63ad56cf.png\";","import React from 'react';\nimport light from './assets/light.png';\nimport dark from './assets/dark.png';\n\nfunction Empty({ darkMode }) {\n    return (\n        <div className=\"detail-container\">\n            <div className=\"detail-box d-flex flex-column\">\n                <div className=\"d-flex justify-content-center\">\n                    <div\n                        style={{\n                            width: 140,\n                            height: 140,\n                            marginBottom: '1rem',\n                            marginTop: '-2.5rem',\n                            backgroundImage: `url(${darkMode ? dark : light})`,\n                            backgroundPosition: 'center',\n                            backgroundSize: 'cover',\n                        }}\n                    />\n                </div>\n                <div className=\"d-flex justify-content-center\">\n                    <h5 className=\"no-selection-text\">No Contact Selected</h5>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Empty;\n","import React, { useState, useEffect } from 'react';\nimport Details from './Details';\nimport Empty from './Empty';\n\nfunction ContactDetails({ selectedContact }) {\n    const [darkMode, setDarkMode] = useState(\n        window.matchMedia('(prefers-color-scheme: dark)').matches\n    );\n\n    const updateDarkMode = (event) => {\n        setDarkMode(event.matches);\n    };\n\n    useEffect(() => {\n        window\n            .matchMedia('(prefers-color-scheme: dark)')\n            .addEventListener('change', updateDarkMode);\n\n        return () => {\n            window\n                .matchMedia('(prefers-color-scheme: dark)')\n                .removeEventListener('change', updateDarkMode);\n        };\n    }, []);\n\n    return selectedContact ? <Details contact={selectedContact} /> : <Empty darkMode={darkMode} />;\n}\n\nexport default ContactDetails;\n","import React from 'react';\n\nfunction Loader() {\n    return (\n        <div className=\"container\">\n            <div className=\"row bounding-box\">\n                <div className=\"col-12\">\n                    <div className=\"sk-cube-grid\">\n                        <div className=\"sk-cube sk-cube1\" />\n                        <div className=\"sk-cube sk-cube2\" />\n                        <div className=\"sk-cube sk-cube3\" />\n                        <div className=\"sk-cube sk-cube4\" />\n                        <div className=\"sk-cube sk-cube5\" />\n                        <div className=\"sk-cube sk-cube6\" />\n                        <div className=\"sk-cube sk-cube7\" />\n                        <div className=\"sk-cube sk-cube8\" />\n                        <div className=\"sk-cube sk-cube9\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Loader;\n","import React from 'react';\n\nfunction Error({ message }) {\n    return (\n        <div className=\"container\">\n            <div className=\"row bounding-box\">\n                <div className=\"col-12\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"d-inline-block\">\n                            <div className=\"panel g-alert\">\n                                <h4 className=\"mb-3\">Error</h4>\n                                <p>{message}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Error;\n","import { useState, useEffect } from 'react';\n\nconst fetchPosts = async (url) => {\n    const response = await fetch(url);\n    const json = await response.json();\n    return json;\n};\n\nfunction useRequest(url, proccessingFn) {\n    const [data, setData] = useState();\n    const [error, setError] = useState();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        async function fetchResource() {\n            try {\n                setLoading(true);\n                const response = await fetchPosts(url);\n                const { results } = response;\n                setData(proccessingFn ? proccessingFn(results) : results);\n            } catch (e) {\n                setError(e.toString());\n            } finally {\n                setLoading(false);\n            }\n        }\n\n        fetchResource();\n    }, [url, proccessingFn]);\n\n    return [data, loading, error];\n}\n\nexport default useRequest;\n","import React, { useState } from 'react';\nimport API_URL from 'shared/utils/consts';\nimport ResponsiveLayout from './ResponsiveLayout';\nimport ContactList from './ContactList';\nimport ContactDetails from './ContactDetails';\nimport Loader from './Loader';\nimport Error from './Error';\n\nimport useRequest from './useRequest';\n\nconst sortData = (arr) =>\n    arr.sort((a, b) => {\n        const nameA = a.name.last.toLowerCase();\n        const nameB = b.name.last.toLowerCase();\n        return nameA < nameB ? -1 : nameA > nameB ? 1 : 0;\n    });\n\nfunction App() {\n    const [contacts, loading, error] = useRequest(API_URL, sortData);\n    const [selectedContactId, setSelectedContactId] = useState();\n\n    if (loading) return <Loader />;\n    if (error) return <Error message={error} />;\n\n    const selectedContact = contacts.find((contact) => contact.id.value === selectedContactId);\n\n    return (\n        <div className=\"container\">\n            <ResponsiveLayout\n                leftContent={\n                    <ContactList\n                        contacts={contacts}\n                        selectedContactId={selectedContactId}\n                        setSelectedContactId={setSelectedContactId}\n                    />\n                }\n                rightContent={<ContactDetails selectedContact={selectedContact} />}\n                modalVisible={selectedContactId}\n                closeModal={() => setSelectedContactId()}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","const API_URL = 'https://randomuser.me/api/1.2/?results=30&exc=login,registered&nat=us';\n\nexport default API_URL;\n","/* eslint-disable */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'shared/styles/main.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}