{"version":3,"sources":["shared/utils/helpers.js","shared/hooks/useRequest.jsx","shared/hooks/useWindowSize.jsx","shared/hooks/useColorScheme.jsx","shared/components/Alert.jsx","shared/components/FontAwesomeIcons.jsx","shared/components/Loader.jsx","App/ResponsiveLayout.jsx","App/ContactList/SearchField.jsx","App/ContactList/SectionList.jsx","App/ContactList/index.jsx","App/ContactDetails/assets/light.png","App/ContactDetails/assets/dark.png","App/ContactDetails/index.jsx","App/index.jsx","shared/utils/consts.js","index.js"],"names":["toCapital","s","arr","split","i","length","charAt","toUpperCase","slice","join","findById","givenId","find","item","id","value","fetchPosts","url","a","fetch","response","json","useRequest","proccessingFn","useState","data","setData","error","setError","loading","setLoading","useEffect","results","toString","fetchResource","useWindowSize","includeListener","isSmall","setIsSmall","updateWindowSize","window","innerWidth","addEventListener","removeEventListener","useColorScheme","matchMedia","matches","darkMode","setDarkMode","updateDarkMode","event","Alert","title","message","className","FontAwesomeIcons","props","icon","size","fixedWidth","inverse","listItem","rotation","flip","spin","pulse","border","pull","library","add","fas","defaultProps","undefined","Loader","ResponsiveModal","children","isVisible","close","onClick","aria-hidden","type","ResponsiveLayout","leftContent","rightContent","modalVisible","closeModal","isSmallWindow","SearchField","searchTerm","handleChange","onChange","placeholder","autoComplete","SectionList","selectedContactId","setSelectedContactId","renderSections","sectionData","map","obj","rowIndex","contact","name","picture","fname","first","lname","last","isRowSelected","role","onKeyPress","src","medium","alt","style","fontWeight","renderRows","section","ContactList","contacts","setSearchTerm","list","setList","itemInListAlreadySelected","regex","replace","searchResults","filter","match","RegExp","search","e","target","result","reduce","acc","curr","push","Object","values","buildDataSource","dateConfig","year","month","day","Empty","isDarkMode","width","height","marginBottom","marginTop","backgroundImage","dark","light","backgroundPosition","backgroundSize","ContactDetails","selectedContact","dob","location","street","city","state","postcode","phone","email","bday","Date","date","toLocaleDateString","addressLine1","addressLine2","items","content","age","large","sortData","sort","b","nameA","toLowerCase","nameB","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfbe598d.chunk.js","sourcesContent":["export const toCapital = (s) => {\n    const arr = s.split(' ');\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    return arr.join(' ');\n};\n\nexport const findById = (arr, givenId) => arr.find((item) => item.id.value === givenId);\n","import { useState, useEffect } from 'react';\n\nconst fetchPosts = async (url) => {\n    const response = await fetch(url);\n    const json = await response.json();\n    return json;\n};\n\nfunction useRequest(url, proccessingFn) {\n    const [data, setData] = useState();\n    const [error, setError] = useState();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        async function fetchResource() {\n            try {\n                setLoading(true);\n                const response = await fetchPosts(url);\n                const { results } = response;\n                setData(proccessingFn ? proccessingFn(results) : results);\n            } catch (e) {\n                setError(e.toString());\n            } finally {\n                setLoading(false);\n            }\n        }\n\n        fetchResource();\n    }, [url, proccessingFn]);\n\n    return [data, loading, error];\n}\n\nexport default useRequest;\n","import { useState, useEffect } from 'react';\n\nfunction useWindowSize(includeListener = true) {\n    const [isSmall, setIsSmall] = useState();\n\n    const updateWindowSize = () => {\n        setIsSmall(window.innerWidth < 992);\n    };\n\n    useEffect(() => {\n        updateWindowSize();\n\n        if (includeListener) window.addEventListener('resize', updateWindowSize);\n\n        return () => window.removeEventListener('resize', updateWindowSize);\n    }, [includeListener]);\n\n    return isSmall;\n}\n\nexport default useWindowSize;\n","import { useState, useEffect } from 'react';\n\nfunction useColorScheme() {\n    const [darkMode, setDarkMode] = useState(\n        window.matchMedia('(prefers-color-scheme: dark)').matches\n    );\n\n    const updateDarkMode = (event) => {\n        setDarkMode(event.matches);\n    };\n\n    useEffect(() => {\n        window\n            .matchMedia('(prefers-color-scheme: dark)')\n            .addEventListener('change', updateDarkMode);\n\n        return () => {\n            window\n                .matchMedia('(prefers-color-scheme: dark)')\n                .removeEventListener('change', updateDarkMode);\n        };\n    }, []);\n\n    return darkMode;\n}\n\nexport default useColorScheme;\n","import React from 'react';\n\nfunction Alert({ title, message }) {\n    return (\n        <div className=\"container\">\n            <div className=\"row bounding-box\">\n                <div className=\"col-12\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"d-inline-block\">\n                            <div className=\"panel g-alert\">\n                                <h4 className=\"mb-3\">{title}</h4>\n                                <p>{message}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Alert;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * The below line adds the solid svg icon set to the core\n * FontAwesome library for use with the <FontAwesomeIcon /> component\n */\nlibrary.add(fas);\n\nfunction FontAwesomeIcons(props) {\n    const {\n        icon,\n        size,\n        fixedWidth,\n        inverse,\n        listItem,\n        rotation,\n        flip,\n        spin,\n        pulse,\n        border,\n        pull,\n        className,\n    } = props;\n\n    return (\n        <FontAwesomeIcon\n            icon={icon}\n            size={size}\n            fixedWidth={fixedWidth}\n            inverse={inverse}\n            listItem={listItem}\n            rotation={rotation}\n            flip={flip}\n            spin={spin}\n            pulse={pulse}\n            border={border}\n            pull={pull}\n            className={className}\n        />\n    );\n}\n\nFontAwesomeIcons.propTypes = {\n    icon: PropTypes.string.isRequired,\n    size: PropTypes.string,\n    fixedWidth: PropTypes.bool,\n    inverse: PropTypes.bool,\n    listItem: PropTypes.bool,\n    rotation: PropTypes.number,\n    flip: PropTypes.string,\n    spin: PropTypes.bool,\n    pulse: PropTypes.bool,\n    border: PropTypes.bool,\n    pull: PropTypes.string,\n    className: PropTypes.string,\n};\n\nFontAwesomeIcons.defaultProps = {\n    size: undefined,\n    fixedWidth: false,\n    inverse: false,\n    listItem: false,\n    rotation: undefined,\n    flip: undefined,\n    spin: false,\n    pulse: false,\n    border: false,\n    pull: undefined,\n    className: undefined,\n};\n\nexport default FontAwesomeIcons;\n","import React from 'react';\n\nfunction Loader() {\n    return (\n        <div className=\"container\">\n            <div className=\"row bounding-box\">\n                <div className=\"col-12\">\n                    <div className=\"sk-cube-grid\">\n                        <div className=\"sk-cube sk-cube1\" />\n                        <div className=\"sk-cube sk-cube2\" />\n                        <div className=\"sk-cube sk-cube3\" />\n                        <div className=\"sk-cube sk-cube4\" />\n                        <div className=\"sk-cube sk-cube5\" />\n                        <div className=\"sk-cube sk-cube6\" />\n                        <div className=\"sk-cube sk-cube7\" />\n                        <div className=\"sk-cube sk-cube8\" />\n                        <div className=\"sk-cube sk-cube9\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Loader;\n","import React from 'react';\nimport { useWindowSize } from 'shared/hooks';\n\nfunction ResponsiveModal({ children, isVisible, close }) {\n    return isVisible ? (\n        <div className=\"g-modal-wrapper\">\n            <div className=\"g-modal-overlay\" onClick={close} aria-hidden=\"true\" />\n            <div className=\"g-modal\">\n                <div className=\"g-modal-titlebar\">\n                    <button type=\"button\" className=\"g-btn\" onClick={close}>\n                        Close\n                    </button>\n                </div>\n                <div className=\"g-modal-content\">{children}</div>\n            </div>\n        </div>\n    ) : null;\n}\n\nfunction ResponsiveLayout({ leftContent, rightContent, modalVisible, closeModal }) {\n    const isSmallWindow = useWindowSize();\n\n    return (\n        <>\n            <div className=\"row bounding-box\">\n                <div className=\"col-12 col-lg-4 full-screen-on-mobile\">\n                    <div className=\"panel\">{leftContent}</div>\n                </div>\n                {!isSmallWindow ? (\n                    <div className=\"col-8\">\n                        <div className=\"panel\">{rightContent}</div>\n                    </div>\n                ) : (\n                    <ResponsiveModal isVisible={modalVisible} close={closeModal}>\n                        {rightContent}\n                    </ResponsiveModal>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default ResponsiveLayout;\n","import React from 'react';\nimport { FontAwesomeIcons } from 'shared/components';\n\nfunction SearchField({ searchTerm, handleChange }) {\n    return (\n        <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">\n                    <FontAwesomeIcons icon=\"search\" fixedWidth />\n                </span>\n            </div>\n            <input\n                type=\"text\"\n                className=\"form-control\"\n                onChange={handleChange}\n                value={searchTerm}\n                placeholder=\"Search\"\n                autoComplete=\"off\"\n            />\n        </div>\n    );\n}\n\nexport default SearchField;\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nimport React from 'react';\nimport { FontAwesomeIcons } from 'shared/components';\nimport { toCapital } from 'shared/utils/helpers';\n\nfunction SectionList({ data = [], selectedContactId, setSelectedContactId }) {\n    const renderRows = (contact, rowIndex) => {\n        const { name, id, picture } = contact;\n        const fname = toCapital(name.first);\n        const lname = toCapital(name.last);\n        const isRowSelected = selectedContactId === contact.id.value;\n\n        return (\n            <div\n                key={rowIndex}\n                role=\"menuitem\"\n                className={`list-row ${isRowSelected ? 'active' : ''}`}\n                onClick={() => setSelectedContactId(id.value)}\n                onKeyPress={() => setSelectedContactId(id.value)}\n            >\n                <div className=\"avatar\">\n                    <img src={picture.medium} alt=\"\" />\n                </div>\n                <div className=\"list-data\">\n                    <p>\n                        <span>{fname}</span> <span style={{ fontWeight: '600' }}>{lname}</span>\n                    </p>\n                </div>\n                <div className=\"list-extra d-lg-none\">\n                    <FontAwesomeIcons icon=\"angle-right\" />\n                </div>\n            </div>\n        );\n    };\n\n    const renderSections = ({ title, data: sectionData }) => (\n        <div key={title}>\n            <div className=\"section-header\">\n                <h6>{title.toUpperCase()}</h6>\n            </div>\n            {sectionData.map((obj, rowIndex) => renderRows(obj, rowIndex))}\n        </div>\n    );\n\n    return (\n        <div className=\"section-list\">\n            {data.map((section) => renderSections(section))}\n            {data.length === 0 && <div className=\"no-results\">No results</div>}\n        </div>\n    );\n}\n\nexport default SectionList;\n","import React, { useState, useEffect } from 'react';\nimport { useWindowSize } from 'shared/hooks';\nimport { findById } from 'shared/utils/helpers';\nimport SearchField from './SearchField';\nimport SectionList from './SectionList';\n\nconst sanitize = (str) => str.replace(/[^a-zA-Z ]/g, '');\n\nfunction ContactList({ contacts, selectedContactId, setSelectedContactId }) {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [list, setList] = useState(contacts);\n    const isSmallWindow = useWindowSize();\n\n    const itemInListAlreadySelected = findById(list, selectedContactId);\n\n    useEffect(() => {\n        const search = () => {\n            const cleanedSearchTerm = sanitize(searchTerm);\n            const regex = cleanedSearchTerm.split('').join('.*');\n            const searchResults = contacts.filter((obj) =>\n                `${obj.name.first} ${obj.name.last}`.match(new RegExp(regex, 'i'))\n            );\n\n            setList(searchResults);\n\n            if (!isSmallWindow && !itemInListAlreadySelected) {\n                setSelectedContactId(searchResults[0]?.id.value);\n            }\n        };\n\n        if (searchTerm) search();\n        if (!searchTerm) setList(contacts);\n    }, [\n        searchTerm,\n        contacts,\n        selectedContactId,\n        setSelectedContactId,\n        isSmallWindow,\n        itemInListAlreadySelected,\n    ]);\n\n    const buildDataSource = () => {\n        const result = list.reduce((acc, curr) => {\n            const title = curr.name.last[0];\n            // eslint-disable-next-line no-param-reassign\n            if (!acc[title]) acc[title] = { title, data: [curr] };\n            else acc[title].data.push(curr);\n            return acc;\n        }, {});\n        return Object.values(result);\n    };\n\n    return (\n        <>\n            <SearchField\n                searchTerm={searchTerm}\n                handleChange={(e) => setSearchTerm(e.target.value)}\n            />\n            <SectionList\n                data={buildDataSource()}\n                selectedContactId={selectedContactId}\n                setSelectedContactId={setSelectedContactId}\n            />\n        </>\n    );\n}\n\nexport default ContactList;\n","export default __webpack_public_path__ + \"static/media/light.afda4434.png\";","export default __webpack_public_path__ + \"static/media/dark.63ad56cf.png\";","import React from 'react';\nimport { useColorScheme } from 'shared/hooks';\nimport { FontAwesomeIcons } from 'shared/components';\nimport { toCapital } from 'shared/utils/helpers';\nimport light from './assets/light.png';\nimport dark from './assets/dark.png';\n\nconst dateConfig = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n};\n\nfunction Empty() {\n    const isDarkMode = useColorScheme();\n\n    return (\n        <div className=\"detail-container\">\n            <div className=\"detail-box d-flex flex-column\">\n                <div className=\"d-flex justify-content-center\">\n                    <div\n                        style={{\n                            width: 140,\n                            height: 140,\n                            marginBottom: '1rem',\n                            marginTop: '-2.5rem',\n                            backgroundImage: `url(${isDarkMode ? dark : light})`,\n                            backgroundPosition: 'center',\n                            backgroundSize: 'cover',\n                        }}\n                    />\n                </div>\n                <div className=\"d-flex justify-content-center\">\n                    <h5 className=\"no-selection-text\">No Contact Selected</h5>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction ContactDetails({ selectedContact }) {\n    if (!selectedContact) return <Empty />;\n\n    const {\n        name,\n        dob,\n        location: { street, city, state, postcode },\n        phone,\n        email,\n        picture,\n    } = selectedContact;\n    const fname = toCapital(name.first);\n    const lname = toCapital(name.last);\n    const title = toCapital(name.title);\n    const bday = new Date(dob.date).toLocaleDateString('en-US', dateConfig);\n    const addressLine1 = toCapital(street);\n    const addressLine2 = `${toCapital(city)}, ${toCapital(state)} ${postcode}`;\n\n    const nationality = 'United States';\n\n    const items = [\n        {\n            icon: 'phone-alt',\n            content: <p>{phone}</p>,\n        },\n        {\n            icon: 'envelope',\n            content: <p>{email}</p>,\n        },\n        {\n            icon: 'birthday-cake',\n            content: <p>{`${bday} (${dob.age} years old)`}</p>,\n        },\n        {\n            icon: 'map-marker-alt',\n            content: (\n                <>\n                    <p>{addressLine1}</p>\n                    <p>{addressLine2}</p>\n                    <p>{nationality}</p>\n                </>\n            ),\n        },\n    ];\n\n    return (\n        <div className=\"detail-container\">\n            <div className=\"detail-box\">\n                <div className=\"row\">\n                    <div className=\"col-sm-4 d-flex justify-content-center spacer\">\n                        <img className=\"avatar-lg\" src={picture.large} alt=\"\" />\n                    </div>\n                    <div className=\"col-sm-8 d-none d-sm-flex name-container\">\n                        <h5>{title}</h5>\n                        <h2>{`${fname} ${lname}`}</h2>\n                    </div>\n                    <div className=\"col-12 d-flex d-sm-none justify-content-center\">\n                        <h2>{`${fname} ${lname}`}</h2>\n                    </div>\n                </div>\n                <div className=\"separator\" />\n                {items.map(({ icon, content }) => (\n                    <div key={icon} className=\"row align-items-center spacer\">\n                        <div className=\"col-3 col-sm-4 d-flex justify-content-center\">\n                            <div className=\"icon-container\">\n                                <div className=\"icon-border\">\n                                    <FontAwesomeIcons icon={icon} fixedWidth />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-9 col-sm-8\">{content}</div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default ContactDetails;\n","import React, { useState } from 'react';\nimport { API_URL } from 'shared/utils/consts';\nimport { findById } from 'shared/utils/helpers';\nimport { useRequest } from 'shared/hooks';\nimport { Alert, Loader } from 'shared/components';\nimport ResponsiveLayout from './ResponsiveLayout';\nimport ContactList from './ContactList';\nimport ContactDetails from './ContactDetails';\n\nconst sortData = (arr) =>\n    arr.sort((a, b) => {\n        const nameA = a.name.last.toLowerCase();\n        const nameB = b.name.last.toLowerCase();\n        return nameA < nameB ? -1 : nameA > nameB ? 1 : 0;\n    });\n\nfunction App() {\n    const [contacts, loading, error] = useRequest(API_URL, sortData);\n    const [selectedContactId, setSelectedContactId] = useState();\n\n    if (loading) return <Loader />;\n    if (error) return <Alert title=\"Error\" message={error} />;\n\n    const selectedContact = findById(contacts, selectedContactId);\n\n    return (\n        <div className=\"container\">\n            <ResponsiveLayout\n                leftContent={\n                    <ContactList\n                        contacts={contacts}\n                        selectedContactId={selectedContactId}\n                        setSelectedContactId={setSelectedContactId}\n                    />\n                }\n                rightContent={<ContactDetails selectedContact={selectedContact} />}\n                modalVisible={selectedContactId}\n                closeModal={() => setSelectedContactId()}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","export const API_URL = 'https://randomuser.me/api/1.2/?results=30&exc=login,registered&nat=us';\n","/* eslint-disable */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'shared/styles/main.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}